(function(NS){ function install(){ if(window.__LC_MONACO_DUMP_TOP__) return; window.__LC_MONACO_DUMP_TOP__=true; const code=`(function(){ if(window.__LC_MONACO_DUMP_TOP__)return; window.__LC_MONACO_DUMP_TOP__=true; function isVis(n){ try{ if(!n) return false; const r=n.getBoundingClientRect(); return r.width>0&&r.height>0&&document.contains(n);}catch(e){return false;} } function pickEditor(M){ const eds=M?.editor?.getEditors?M.editor.getEditors():[]; const focused=eds.find(e=>e?.hasTextFocus&&e.hasTextFocus()); if(focused) return focused; const visible=eds.find(e=> isVis(e?.getDomNode&&e.getDomNode())); if(visible) return visible; return eds[0]||null; } window.addEventListener('lc-monaco-request-top', function(){ try{ const M=window.monaco; let code='', langId='', info={where:'top'}; if(M&&M.editor){ const ed=pickEditor(M); let model=ed?.getModel?ed.getModel():null; const models=M.editor.getModels?M.editor.getModels():[]; if(!model && models?.length){ model=models.sort((a,b)=>((b.getValue?.().length||0)-(a.getValue?.().length||0)))[0]||null; } if(model){ code=model.getValue?model.getValue():''; langId=model.getLanguageId?model.getLanguageId():''; } info={ where:'top', editors:(M.editor.getEditors?M.editor.getEditors():[]).length, models:models.length, modelLen:(code||'').length, langId }; } document.dispatchEvent(new CustomEvent('lc-monaco-dump-top',{detail:{code,langId,__info:info}})); }catch(e){ document.dispatchEvent(new CustomEvent('lc-monaco-dump-top',{detail:{code:'',langId:'',__info:{where:'top',error:String(e&&e.message||e)}}})); } }); })();`; const s=document.createElement('script'); s.textContent=code; document.documentElement.appendChild(s); s.remove(); } function request(timeout=1200){ return new Promise(resolve=>{ const on=ev=>{ document.removeEventListener('lc-monaco-dump-top', on); resolve(ev.detail||{code:'',langId:'',__info:{}}); }; document.addEventListener('lc-monaco-dump-top', on, {once:true}); document.dispatchEvent(new Event('lc-monaco-request-top')); setTimeout(()=>{ try{ document.removeEventListener('lc-monaco-dump-top', on);}catch{} resolve({code:'',langId:'',__info:{where:'top',timeout:true}}); }, timeout); }); } NS.capture.monacoTop={ install, request }; })(window.LCMD);
