(function(NS){ function mdCell(md){ return {cell_type:'markdown', metadata:{}, source: md.endsWith('\n')?md:md+'\n'}; } function pyCell(code){ return {cell_type:'code', metadata:{}, execution_count:null, outputs:[], source: code.endsWith('\n')?code:code+'\n'}; } function harness(varNames, uniqCases){ return pyCell('# harness placeholder\n'); } function reference(subRows, map){ return pyCell('# reference placeholder\n'); } function monacoCell(editor){ return pyCell('# monaco placeholder\n'); } function storageCell(scan){ return pyCell('# storage placeholder\n'); } NS.nb.cells={ mdCell, pyCell, harness, reference, monacoCell, storageCell }; })(window.LCMD);
