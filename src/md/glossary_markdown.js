(function(NS){ function toLabel(term){ let t=(term||'').trim().replace(/[\r\n]+/g,' ').replace(/[\[\]]/g,''); if(!t) t='term'; return t.toLowerCase().replace(/\s+/g,'-').replace(/[^a-z0-9-]/g,'').replace(/^-+|-+$/g,''); } function injectAnchors(descMd, pairs){ if(!descMd||!pairs?.length) return descMd; const chunks=descMd.split(/(\n```[\s\S]*?\n```)/g); const used=new Set(); function inject(text){ let out=text; for(const p of pairs){ if(used.has(p.label)||!p.term||!p.md) continue; const safe=p.term.replace(/[.*+?^${}()|[\]\\]/g,'\\$&'); const re=new RegExp(`\\b(${safe})\\b`); if(re.test(out)){ out=out.replace(re, `[${p.term}](#glossary-${p.label})`); used.add(p.label); } } return out; } for(let i=0;i<chunks.length;i++) if(i%2===0) chunks[i]=inject(chunks[i]); return chunks.join(''); } NS.md.glossary_markdown={ toLabel, injectAnchors }; })(window.LCMD);
