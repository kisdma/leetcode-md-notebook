(function(NS){ async function fetchAsDataURL(url, timeoutMs){ const g=NS.net.gmxhr; if(g.available()){ try{ const res=await g.request({ method:'GET', url, timeout:timeoutMs, responseType:'arraybuffer' }); const headers=String(res.responseHeaders||''); const m=headers.match(/\bcontent-type:\s*([^\r\n;]+)/i); const mime=m?m[1].trim():'application/octet-stream'; const b64=g.ab2b64(res.response||new ArrayBuffer(0)); if(b64) return {ok:true, dataUrl:`data:${mime};base64,${b64}`, mime, size:(res.response||{}).byteLength||0}; }catch(e){} } try{ const r=await fetch(url,{credentials:'include'}); if(!r.ok) throw new Error('HTTP '+r.status); const blob=await r.blob(); const data=await new Promise((resolve,reject)=>{ const fr=new FileReader(); fr.onload=()=>resolve(fr.result); fr.onerror=reject; fr.readAsDataURL(blob); }); return {ok:true, dataUrl:data, mime:blob.type||'application/octet-stream', size:blob.size||0}; }catch(e){ return {ok:false, error:String(e)}; } } NS.net.images={ fetchAsDataURL }; })(window.LCMD);
