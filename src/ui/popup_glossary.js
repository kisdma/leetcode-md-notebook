(function(NS){ const C=NS.core.config; function isVisible(el){ if(!el) return false; const cs=getComputedStyle(el); if(cs.display==='none'||cs.visibility==='hidden'||cs.opacity==='0') return false; const r=el.getBoundingClientRect(); return r.width>0 && r.height>0; } function candidates(){ return Array.from(document.querySelectorAll('[role="dialog"],[role="tooltip"],[data-radix-popper-content-wrapper],[data-portal] [role="dialog"],[data-portal] [role="tooltip"],[data-portal] [data-state="open"],[data-state="open"]')); } async function waitContentReady(container, cfg=C.CONTENT_READY){ const start=performance.now(); let last='', stable=0; return await new Promise(res=>{ function step(){ const html=container.innerHTML; const meaningful = (html.replace(/\s+/g,' ').trim().length >= cfg.MIN_CHARS) || container.querySelector(cfg.SEMANTIC_SEL); if(meaningful){ if(html==last) stable++; else { stable=1; last=html; } if(stable>=cfg.STABLE_SAMPLES) return res(html); } if(performance.now()-start>=cfg.TIMEOUT_MS) return res(container.innerHTML); setTimeout(step, cfg.STABLE_GAP_MS); } step(); }); } function nearestOpen(btn, radius=C.GLOSSARY_CFG.PROXIMITY_PX){ const vis=candidates().filter(isVisible); if(!vis.length) return null; const br=btn.getBoundingClientRect(); const bc={x:br.left+br.width/2,y:br.top+br.height/2}; let best=null; for(const el of vis){ const r=el.getBoundingClientRect(); const ec={x:r.left+r.width/2,y:r.top+r.height/2}; const d=Math.hypot(bc.x-ec.x, bc.y-ec.y); if(d<=radius && (!best||d<best.d)) best={el,d}; } return best?best.el:null; } async function clickOpenAndGetHTML(btn){ btn.scrollIntoView({block:'center',inline:'center'}); btn.click(); await new Promise(r=>setTimeout(r,C.GLOSSARY_CFG.HOVER_CLICK_WAIT_MS)); const id=btn.getAttribute('aria-controls'); let cont=null; if(id){ const node=document.getElementById(id); if(node && isVisible(node)) cont=node; } if(!cont) cont=nearestOpen(btn); let html=''; if(cont) html=await waitContentReady(cont); btn.click(); await new Promise(r=>setTimeout(r,C.GLOSSARY_CFG.CLOSE_WAIT_MS)); return { html: html||'', method: 'btn-click' }; } NS.ui.popup_glossary={ waitContentReady, nearestOpen, clickOpenAndGetHTML }; })(window.LCMD);
